---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: lvmclusters.lvm.topolvm.io
spec:
  group: lvm.topolvm.io
  names:
    kind: LVMCluster
    listKind: LVMClusterList
    plural: lvmclusters
    singular: lvmcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LVMCluster is the Schema for the lvmclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LVMClusterSpec defines the desired state of LVMCluster
            properties:
              storage:
                description: Storage describes the deviceClass configuration for local
                  storage devices
                properties:
                  deviceClasses:
                    description: DeviceClasses are a rules that assign local storage
                      devices to volumegroups that are used for creating lvm based
                      PVs
                    items:
                      properties:
                        default:
                          description: Default is a flag to indicate whether the device-class
                            is the default
                          type: boolean
                        deviceSelector:
                          description: DeviceSelector is a set of rules that should
                            match for a device to be included in the LVMCluster
                          properties:
                            forceWipeDevicesAndDestroyAllData:
                              description: |-
                                ForceWipeDevicesAndDestroyAllData runs wipefs to wipe the devices.
                                This can lead to data lose. Enable this only when you know that the disk
                                does not contain any important data.
                              type: boolean
                            optionalPaths:
                              description: |-
                                A list of device paths which could be chosen for creating Volume Group.
                                For example "/dev/disk/by-path/pci-0000:04:00.0-nvme-1"
                                We discourage using the device names as they can change over node restarts.
                              items:
                                type: string
                              type: array
                            paths:
                              description: |-
                                A list of device paths which would be chosen for creating Volume Group.
                                For example "/dev/disk/by-path/pci-0000:04:00.0-nvme-1"
                                We discourage using the device names as they can change over node restarts.
                              items:
                                type: string
                              type: array
                          type: object
                        fstype:
                          default: xfs
                          description: FilesystemType sets the filesystem the device
                            should use
                          enum:
                          - xfs
                          - ext4
                          - ""
                          type: string
                        name:
                          description: |-
                            Name of the class, the VG and possibly the storageclass.
                            Validations to confirm that this field can be used as metadata.name field in storageclass
                            ref: https://github.com/kubernetes/apimachinery/blob/de7147/pkg/util/validation/validation.go#L209
                          maxLength: 245
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        nodeAccessPolicy:
                          default: IsolatedToNode
                          description: NodeAccessPolicy describes the policy for accessing
                            the deviceClass on the node.
                          enum:
                          - SharedAcrossNodes
                          - IsolatedToNode
                          type: string
                        nodeSelector:
                          description: NodeSelector chooses nodes on which to create
                            the deviceclass
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: |-
                                  A null or empty node selector term matches no objects. The requirements of
                                  them are ANDed.
                                  The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: |-
                                        A node selector requirement is a selector that contains values, a key, and an operator
                                        that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            Represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: |-
                                            An array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. If the operator is Gt or Lt, the values
                                            array must have a single element, which will be interpreted as an integer.
                                            This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: |-
                                        A node selector requirement is a selector that contains values, a key, and an operator
                                        that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            Represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: |-
                                            An array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. If the operator is Gt or Lt, the values
                                            array must have a single element, which will be interpreted as an integer.
                                            This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                                x-kubernetes-map-type: atomic
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                          x-kubernetes-map-type: atomic
                        thinPoolConfig:
                          description: ThinPoolConfig contains configurations for
                            the thin-pool
                          properties:
                            name:
                              description: Name of the thin pool to be created
                              type: string
                            overprovisionRatio:
                              description: |-
                                OverProvisionRatio is the factor by which additional storage can be provisioned compared to
                                the available storage in the thin pool.
                              minimum: 1
                              type: integer
                            sizePercent:
                              default: 90
                              description: |-
                                SizePercent represents percentage of remaining space in the volume group that should be used
                                for creating the thin pool.
                              maximum: 90
                              minimum: 10
                              type: integer
                          required:
                          - name
                          - overprovisionRatio
                          type: object
                      type: object
                    type: array
                type: object
              tolerations:
                description: Tolerations to apply to nodes to act on
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: LVMClusterStatus defines the observed state of LVMCluster
            properties:
              conditions:
                description: Conditions describes the state of the resource.
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              deviceClassStatuses:
                description: DeviceClassStatuses describes the status of all deviceClasses
                items:
                  description: DeviceClassStatus defines the observed status of the
                    deviceclass across all nodes
                  properties:
                    name:
                      description: Name is the name of the deviceclass
                      type: string
                    nodeStatus:
                      description: NodeStatus tells if the deviceclass was created
                        on the node
                      items:
                        description: NodeStatus defines the observed state of the
                          deviceclass on the node
                        properties:
                          devices:
                            description: Devices is the list of devices used by the
                              volume group
                            items:
                              type: string
                            type: array
                          excluded:
                            description: |-
                              Excluded contains the per node status of applied device exclusions that were picked up via selector,
                              but were not used for other reasons.
                            items:
                              properties:
                                name:
                                  description: Name is the device that was filtered
                                  type: string
                                reasons:
                                  description: Reasons are the human-readable reasons
                                    why the device was excluded from the volume group
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - reasons
                              type: object
                            type: array
                          name:
                            description: Name is the name of the volume group
                            type: string
                          node:
                            description: Node is the name of the node
                            type: string
                          reason:
                            description: Reason provides more detail on the volume
                              group creation status
                            type: string
                          status:
                            description: Status tells if the volume group was created
                              on the node
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              ready:
                description: Ready describes if the LVMCluster is ready.
                type: boolean
              state:
                description: State describes the LVMCluster state.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
