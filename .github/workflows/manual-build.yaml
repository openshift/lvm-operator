name: manual-operator-build-push

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to Build From'
        required: true
      registry_namespace:
        description: quay registry repository ns
        default: lvmo
      tag:
        description: 'Additional tag for the build (such as alpha, beta, etc.) - Optional'
        default: ''

jobs:
  build-and-publish-image:
    name: Build and publish the LVMO image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          ref: ${{ github.event.inputs.branch }}

      # 'test' is a sub-target of 'docker-build' and so cache go build & mod
      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Login to quay (quay.io/lvmo)
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_LVMO_ROBOT_NAME }}
          password: ${{ secrets.QUAY_LVMO_ROBOT_TOKEN }}

      - name: Get Current Date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Prepare image tag
        id: prep
        run: |
          TAG=${{ github.event.inputs.branch }}-${{ steps.date.outputs.date }}
          LATEST_TAG=latest
          OPERATOR_IMG=quay.io/${{ github.event.inputs.registry_namespace }}/lvm-operator:${TAG}
          OPERATOR_IMG_LATEST="quay.io/${{ github.event.inputs.registry_namespace }}/lvm-operator:${LATEST}"
          OPERATOR_BUNDLE_IMG="quay.io/${{ github.event.inputs.registry_namespace }}/lvm-operator-bundle:${TAG}"
          OPERATOR_BUNDLE_IMG_LATEST="quay.io/${{ github.event.inputs.registry_namespace }}/lvm-operator-bundle:${TAG}"
          echo "op-latest=${OPERATOR_IMG_LATEST}" >> $GITHUB_OUTPUT
          echo "bundle-latest=${OPERATOR_BUNDLE_IMG_LATEST}" >> $GITHUB_OUTPUT
          echo "op-img=${OPERATOR_IMG}" >> $GITHUB_OUTPUT
          echo "bundle-img=${OPERATOR_BUNDLE_IMG}" >> $GITHUB_OUTPUT

      - name: Build and publish operator image
        env:
          REGISTRY_NAMESPACE: ${{ github.event.inputs.registry_namespace }}
          IMG: ${{ steps.prep.outputs.op-img }}
        run: |
          make docker-build-combined
          make docker-push
          docker tag ${{ steps.prep.outputs.op-img }} {{ steps.prep.outputs.op-latest }}
          docker push ${{ steps.prep.outputs.op-latest }}

      - name: Build and publish operator bundle image
        env:
          REGISTRY_NAMESPACE: ${{ github.event.inputs.registry_namespace }}
          BUNDLE_IMG: ${{ steps.prep.outputs.bundle-img }}
        run: |
          make bundle bundle-build
          make bundle-push
          docker tag ${{ steps.prep.outputs.bundle-img }} ${{ steps.prep.outputs.bundle-latest }}
          docker push ${{ steps.prep.outputs.bundle-latest }}
